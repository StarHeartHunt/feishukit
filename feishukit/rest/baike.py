"""DO NOT EDIT THIS FILE!

This file is auto generated by feishu rest api description.
"""


from typing import TYPE_CHECKING, overload

from pydantic import BaseModel, parse_obj_as

if TYPE_CHECKING:
    from feishukit.response import Response


class BaikeClient:
    def __init__(self, feishu):
        self._feishu = feishu

    def create_draft(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/draft/create

        草稿并非百科词条，而是指通过 API 发起创建新词条或更新现有词条的申请。百科管理员审核通过后，草稿将变为新的词条或覆盖已有词条。
        """
        ...

    def update_draft(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/draft/update

        根据 draft_id 更新草稿内容，已审批的草稿无法编辑
        """
        ...

    def create_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/create

        通过此接口创建的词条，不需要百科管理员审核可直接写入词库，请慎重使用【租户管理员请慎重审批】。
        """
        ...

    def update_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/update

        通过此接口更新已有的词条，不需要百科管理员审核可直接写入词库，请慎重使用【租户管理员请慎重审批】。
        """
        ...

    def get_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/get

        通过词条 id 拉取对应的词条详情信息。
        """
        ...

    def list_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/list

        分页拉取词条列表数据，支持拉取租户内的全部词条。
        """
        ...

    def match_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/match

        将关键词与词条名、别名精准匹配，并返回对应的 词条 ID。
        """
        ...

    def search_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/search

        传入关键词，与词条名、别名、释义等信息进行模糊匹配，返回搜到的词条信息。
        """
        ...

    def highlight_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/highlight

        传入一句话，智能识别句中对应的词条，并返回词条位置和 entity_id，可在外部系统中快速实现百科词条智能高亮。
        """
        ...

    def extract_entity(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/extract

        提取文本中可能成为百科词条的词语，且不会过滤已经成为百科词条的词语。同时，会返回推荐的别名。
        """
        ...

    def list_classification(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/classification/list

        获取企业百科当前分类。<br>
        企业百科目前为二级分类体系，每个词条可添加多个二级分类，但每个一级分类下只能添加一个分类。
        """
        ...

    def upload_file(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/file/upload

        百科词条图片资源上传。
        """
        ...

    def download_file(
        self,
    ):
        """
        https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/file/download

        通过 file_token 下载原图片
        """
        ...
