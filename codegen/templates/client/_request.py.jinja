{% from "client/_response.py.jinja" import build_response_model, build_error_models %}

{% set TYPE_MAPPING = {"json": "json", "form": "data", "file": "files", "raw": "content"} %}

{% macro build_path(api) %}
{% if api.api_path %}
url = f"{{ api.api_path }}"
{% else %}
url = "{{ api.api_path }}"
{% endif %}
{% endmacro %}

{% macro build_query(query) %}
params = {
    {% for param in query %}
    "{{ param.name }}": {{ param.name }},
    {% endfor %}
}
{% endmacro %}

{% macro build_body(endpoint) %}
{% set name = TYPE_MAPPING[endpoint.request_content_type] %}
if not kwargs:
    kwargs = UNSET

{{ name }} = kwargs if data is UNSET else data
{{ name }} = parse_obj_as(
    "Response",
    {{ name }}
)
{{ name }} = {{ name }}.dict(by_alias=True) if isinstance({{ name }}, BaseModel) else {{ name }}
{% endmacro %}

{% macro build_request(endpoint) %}
{{ build_path(endpoint.api) }}
{% if endpoint.query %}
{{ build_query(endpoint.query) }}
{% endif %}
{% if endpoint.request_body %}
{{ build_body(endpoint) }}
{% endif %}
{% endmacro %}


{% macro build_request_params(endpoint) %}
"{{ endpoint.api.http_method | upper }}",
url,
{% if endpoint.query %}
params=exclude_unset(params),
{% endif %}
{% if endpoint.request_body %}
{% set name = TYPE_MAPPING[endpoint.request_content_type] %}
{{ name }}=exclude_unset({{ name }}),
{% endif %}
{% endmacro %}